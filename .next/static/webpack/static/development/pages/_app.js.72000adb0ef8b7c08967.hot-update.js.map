{"version":3,"file":"static/webpack/static/development/pages/_app.js.72000adb0ef8b7c08967.hot-update.js","sources":["webpack:///./components/Cart.js","webpack:///./components/TakeMyMoneyPaystack.js"],"sourcesContent":["import React from \"react\";\nimport { Query, Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { adopt } from \"react-adopt\";\nimport CartStyles from \"./styles/CartStyles\";\nimport Supreme from \"./styles/Supreme\";\nimport CloseButton from \"./styles/CloseButton\";\nimport SickButton from \"./styles/SickButton\";\nimport User from \"./User\";\nimport CartItem from \"./CartItem\";\nimport calctotalPrice from \"../lib/calcTotalPrice\";\nimport formatMoney from \"../lib/formatMoney\";\nimport TakeMyMoney from \"./TakeMyMoney\";\nimport TakeMyMoneyPaystack from \"./TakeMyMoneyPaystack\";\n\nconst LOCAL_STATE_QUERY = gql`\n  query {\n    cartOpen @client\n  }\n`;\n\nconst TOGGLE_CART_MUTATION = gql`\n  mutation {\n    toggleCart @client\n  }\n`;\n\nconst Composed = adopt({\n  user: ({ render }) => <User>{render}</User>,\n  toggleCart: ({ render }) => (\n    <Mutation mutation={TOGGLE_CART_MUTATION}>{render}</Mutation>\n  ),\n  localState: ({ render }) => <Query query={LOCAL_STATE_QUERY}>{render}</Query>\n});\n\nconst Cart = props => {\n  return (\n    <Composed>\n      {({ user, toggleCart, localState }) => {\n        const { me } = user.data;\n        if (!me) {\n          return null;\n        }\n        return (\n          <CartStyles open={localState.data.cartOpen}>\n            <header>\n              <CloseButton title=\"close\" onClick={toggleCart}>\n                &times;{\" \"}\n              </CloseButton>\n              <Supreme>{me.name}'s Cart</Supreme>\n              <p>\n                You have {me.cart.length} item\n                {me.cart.length > 1 && \"s\"} in your cart\n              </p>\n            </header>\n            <ul>\n              {me.cart.map(cartItem => (\n                <CartItem key={cartItem.id} cartItem={cartItem} />\n              ))}\n            </ul>\n            <footer>\n              <p>{formatMoney(calctotalPrice(me.cart))}</p>\n              {me.cart.length && (\n                <>\n                  <TakeMyMoney>\n                    <SickButton>Checkout</SickButton>\n                  </TakeMyMoney>\n                  <TakeMyMoneyPaystack />\n                </>\n              )}\n            </footer>\n          </CartStyles>\n        );\n      }}\n    </Composed>\n  );\n};\n\nexport default Cart;\nexport { LOCAL_STATE_QUERY, TOGGLE_CART_MUTATION };\n","import React from \"react\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport { Mutation } from \"react-apollo\";\nimport Router from \"next/router\";\nimport NProgress from \"nprogress\";\nimport PropTypes from \"prop-types\";\nimport gql from \"graphql-tag\";\nimport calcTotalPrice from \"../lib/calcTotalPrice\";\nimport Error from \"./ErrorMessage\";\nimport User, { CURRENT_USER_QUERY } from \"./User\";\n\nconst CREATE_ORDER_MUTATION = gql`\n  mutation CREATE_ORDER_MUTATION($token: String!) {\n    createOrder(token: $token) {\n      id\n      charge\n      total\n      items {\n        id\n        title\n      }\n    }\n  }\n`;\n\nfunction totalItems(cart) {\n  return cart.reduce((tally, cartItem) => tally + cartItem.quantity, 0);\n}\n\nclass TakeMyMoney extends React.Component {\n  onTokenResponse = async (res, createOrder) => {\n    NProgress.start();\n    console.log(\"Ontoken called\", res);\n    //manually call the mutation once we have the stripe token\n    const order = await createOrder({\n      variables: {\n        token: res.id\n      }\n    }).catch(err => {\n      alert(err.message);\n    });\n    console.log({ order });\n    Router.push({\n      pathname: \"/order\",\n      query: { id: order.data.createOrder.id }\n    });\n  };\n  render() {\n    const { children } = this.props;\n    return (\n      <User>\n        {({ data: { me } }) => (\n          <Mutation\n            mutation={CREATE_ORDER_MUTATION}\n            refetchQueries={[\n              {\n                query: CURRENT_USER_QUERY\n              }\n            ]}\n          >\n            {createOrder => (\n              <StripeCheckout\n                amount={calcTotalPrice(me.cart)}\n                name=\"BrytaShop\"\n                description={`Order of ${totalItems(me.cart)} items`}\n                image={\n                  me.cart.length > 0 && me.cart[0].item && me.cart[0].item.image\n                }\n                stripeKey=\"pk_test_RfwBxGBltTB84Zg6BndB4Wvf00ub29j2IS\"\n                currency=\"NGN\"\n                email={me.email}\n                token={res => this.onTokenResponse(res, createOrder)}\n              >\n                {children}\n              </StripeCheckout>\n            )}\n          </Mutation>\n        )}\n      </User>\n    );\n  }\n}\n\nexport default TakeMyMoney;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AACA;AAOA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAaA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAKA;AACA;AADA;AADA;AAKA;AACA;AACA;AAXA;AAIA;AAOA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AACA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAgBA;AAAA;AACA;AADA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAEA;AADA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AATA;AA6BA;;;;AAnDA;AACA;AAqDA;;;;A","sourceRoot":""}